{"version":3,"sources":["AutoComplete.js","App.js","index.js"],"names":["AutoComplete","state","value","_this","props","currentRefinement","onChange","_","_ref","newValue","onSuggestionCleared","setState","onSuggestionsFetchRequested","_ref2","refine","onSuggestionsClearRequested","hit","name","react_default","a","createElement","Highlight","attribute","_this$props","this","hits","onSuggestionSelected","inputProps","placeholder","dist_default","suggestions","getSuggestionValue","renderSuggestion","Component","connectAutoComplete","VirtalSearchBox","connectSearchBox","searchClient","algoliasearch","Hit","className","App","query","suggestion","href","InstantSearch","indexName","Configure","hitsPerPage","src_AutoComplete","ClearRefinements","CurrentRefinements","RefinementList","showMore","defaultRefinement","Hits","hitComponent","Pagination","PoweredBy","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5b0a402e.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Highlight,\n  connectAutoComplete\n} from 'react-instantsearch-dom';\nimport AutoSuggest from 'react-autosuggest';\n\nclass AutoComplete extends Component {\n  static propTypes = {\n    hits: PropTypes.arrayOf(PropTypes.object).isRequired,\n    currentRefinement: PropTypes.string.isRequired,\n    refine: PropTypes.func.isRequired,\n    onSuggestionSelected: PropTypes.func.isRequired,\n    onSuggestionCleared: PropTypes.func.isRequired,\n  };\n\n  state = {\n    value: this.props.currentRefinement,\n  };\n\n  onChange = (_, { newValue }) => {\n    if (!newValue) {\n      this.props.onSuggestionCleared();\n    }\n\n    this.setState({\n      value: newValue,\n    });\n  };\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.props.refine(value);\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.props.refine();\n  };\n\n  getSuggestionValue(hit) {\n    return hit.name;\n  }\n\n  renderSuggestion(hit) {\n    return <Highlight attribute=\"name\" hit={hit} />;\n  }\n\n  render() {\n    const { hits, onSuggestionSelected } = this.props;\n    const { value } = this.state;\n\n    const inputProps = {\n      placeholder: 'Search for a product...',\n      onChange: this.onChange,\n      value,\n    };\n\n    return (\n      <AutoSuggest\n        suggestions={hits}\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n        onSuggestionSelected={onSuggestionSelected}\n        getSuggestionValue={this.getSuggestionValue}\n        renderSuggestion={this.renderSuggestion}\n        inputProps={inputProps}\n      />\n    );\n  }\n}\n\nexport default connectAutoComplete(AutoComplete);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport algoliasearch from 'algoliasearch/lite';\nimport {\n  InstantSearch,\n  Configure,\n  Hits,\n  Highlight,\n  connectSearchBox,\n  ClearRefinements,\n  CurrentRefinements,\n  RefinementList,\n  Pagination,\n  PoweredBy,\n} from 'react-instantsearch-dom';\nimport Autocomplete from './AutoComplete';\nimport './App.css';\n\nconst VirtalSearchBox = connectSearchBox(() => null);\n\nconst searchClient = algoliasearch(\n  'QBE3NXD3HZ',\n  '0b63627a2efff1c9f74bbe7c9b6fb1e8'\n);\n\nclass App extends Component {\n  state = {\n    query: '',\n  };\n\n  onSuggestionSelected = (_, { suggestion }) => {\n    this.setState({\n      query: suggestion.name,\n    });\n  };\n\n  onSuggestionCleared = () => {\n    this.setState({\n      query: '',\n    });\n  };\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <div>\n        <header className=\"header\">\n          <h1 className=\"header-title\">\n            <a href=\"/\">Concerts Listings</a>\n          </h1>\n          <p className=\"header-subtitle\">\n            using{' '}\n            <a href=\"https://github.com/algolia/react-instantsearch\">\n              React InstantSearch\n            </a>\n            {' with Autocomplete'}\n          </p>\n        </header>\n        <div className=\"container\">\n          <InstantSearch indexName=\"concerts\" searchClient={searchClient}>\n            <Configure hitsPerPage={25} />\n            <Autocomplete\n              onSuggestionSelected={this.onSuggestionSelected}\n              onSuggestionCleared={this.onSuggestionCleared}\n            />\n          </InstantSearch>\n\n          <InstantSearch indexName=\"concerts\" searchClient={searchClient}>\n            <div className=\"left-panel\">\n              <h2>Name</h2>\n              <ClearRefinements />\n              <CurrentRefinements />\n              <RefinementList\n                attribute={\"name\"}\n                showMore={true}\n              />\n\n              <Configure hitsPerPage={20} />\n            </div>\n            <VirtalSearchBox defaultRefinement={query} />\n            <Hits hitComponent={Hit} />\n            <div className=\"pagination\">\n              <Pagination />\n            </div>\n            <div className=\"poweredBy\">\n              <PoweredBy />\n            </div>\n          </InstantSearch>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Hit(props) {\n  return (\n    <div>\n      <div className=\"hit-name\">\n        <Highlight attribute=\"name\" hit={props.hit} />\n      </div>\n      <div className=\"hit-location\">\n        <Highlight attribute=\"location\" hit={props.hit} />\n      </div>\n      <div className=\"hit-date\">\n        <Highlight attribute=\"date\" hit={props.hit} />\n      </div>\n    </div>\n  );\n}\n\n\nHit.propTypes = {\n  hit: PropTypes.object.isRequired,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}